make_adiacent_table.py
	testprogram:python3 test1.py --codpath ciflist
	各引数に
	--codpath:cifファイルをまとめているディレクトリ、デフォルトはCOD/O
	--output1:出力結果をまとめたディレクトリ、デフォルトはresult
	--output2:output1のひとつ下の出力ディレクトリ、デフォルトはcod


make_nn_data.py:
	nn_dataを生成しdatファイルとそれと同じ情報を持つpickleファイルの２つを生成
	



・isite:原子サイトの番号
・nn_data:datファイルと同じ情報が辞書のネストとしてバイナリバイナリ形式で保存されている
・neighbor_data_*pickleは隣接情報をまとめた辞書型がネストしているバイナリファイル
・neighbor_data_*pickleのネストの形式は次の通り
{isite{adjacent_number1:adjacent_site_number1,adjacent_number2:adjacent_site_number}}

isite:原子サイトの番号
adjacent_number_i:第i隣接
adjacent_site_number_i:第i隣接の原子サイト番号をリストアップ.また,隣接原子に隣接している原子のisiteをたどってきた番号を除いてリストに起こしている.

例
{0: {1: [[16, 10, 14, 12]], 2: [[1], [3], [6], [3]]}}

この場合、サイト番号0に関する隣接情報がまとめられている。第一隣接の情報は1: [[16, 10, 14, 12]]に当たり、要素は隣接している原子のサイト番号を表している。
 2: [[1], [3], [6], [3]]は第二隣接の情報を表しており、第一隣接の原子とつながっている原子のサイト番号を注目原子を除いて表している。おそらく順番は第一隣接原子の順番に沿っているものと思われる。
 
 
データベースのクラスターを正規クラスター(レギュラークラスター)

distance base cluster anarysis (angstrom)
